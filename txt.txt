class Base {
  public next:Base = null
  public previous:Base = null
  public readonly name:string

  public constructor(name:string) {
    this.name = name
  }
}

class List {
  public head:Base = null

  public add (base:Base):void {
    if (this.head != null) {
      let beforeHead = this.head.previous

      base.next = this.head
      base.previous = beforeHead

      beforeHead.next = base
      this.head.previous = base
    } else {
      this.head = base
      this.head.next = this.head
      this.head.previous = this.head
    }
  }

  public addBeforeHead (base:Base):void {
    if (this.head != null) {
      let beforeHead = this.head.previous
      let next = this.head.next

      base.next = next
      base.previous = this.head

      next.previous = base
      this.head.next = base

      this.head = base
    } else {
      this.head = base
      this.head.next = this.head
      this.head.previous = this.head
    }
  }

  public search (name:string):Base {
    return null
  }
}

let list:List = new List()
for (let i = 0; i < 5; i++) {
  list.add(new Base(`${i}`))
  console.log(list.head)
}
for (let i = 5; i < 10; i++) {
  list.addBeforeHead(new Base(`${i}`))
  console.log(list.head)
}